[project]
name = "dpf-mrcfile"
description="A library for handling scientific volume and image-stack data like from .MAP .MRC .MRCS"
requires-python = ">=3.10"
authors = [{name = "Danny Farrell", email = "16297104+danpf@users.noreply.github.com"}]
dependencies = ["numpy>=1.22"]
version="1.0.0"
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python",
    "Operating System :: POSIX",
    "Operating System :: MacOS :: MacOS X",
]


[project.optional-dependencies]
dev = ["pytest>=6.0", "twine"]

[tool.cibuildwheel]
test-requires = "pytest"
test-command = "pytest {package}/test"
test-skip = ["*universal2:arm64"]
skip = "*-win32 *-win_arm64 pp*win* *musllinux*"

[tool.ruff]
src = ["src/dpf-mrcfile"]

[tool.ruff.lint]
extend-select = [
  "B",      # flake8-bugbear
  "I",      # isort
  "ARG",    # flake8-unused-arguments
  "C4",     # flake8-comprehensions
  "EM",     # flake8-errmsg
  "ICN",    # flake8-import-conventions
  "G",      # flake8-logging-format
  "PGH",    # pygrep-hooks
  "PIE",    # flake8-pie
  "PL",     # pylint
  "PTH",    # flake8-use-pathlib
  "RET",    # flake8-return
  "RUF",    # Ruff-specific
  "SIM",    # flake8-simplify
  "T20",    # flake8-print
  "UP",     # pyupgrade
  "YTT",    # flake8-2020
  "EXE",    # flake8-executable
  "NPY",    # NumPy specific rules
  "PD",     # pandas-vet
]
ignore = [
  "PLR",    # Design related pylint codes
  "PT",     # flake8-pytest-style
]
isort.required-imports = ["from __future__ import annotations"]

[tool.ruff.per-file-ignores]
"src/dpf-mrcfile/test/**" = ["T20"]

