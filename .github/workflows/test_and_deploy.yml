---
name: "CI & CD"

on:
  workflow_dispatch:
  pull_request:
  release:
    types:
    - published
  push:
    branches:
      - master

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  test-and-build:
    name: "Build & Test"
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-11]
        project_folder: ["./src/python/dpf-ssw-aligner-rs"]
        python-version: ['cp310', 'cp311']
    runs-on: ${{ matrix.os }}
    env:
      CIBW_ENVIRONMENT: 'PATH="$PATH:$HOME/.cargo/bin"'
      CIBW_SKIP: "cp27-* cp34-* cp35-* pp*-win* *-win32 *-win_arm64 *-musllinux_*"

    steps:
      - uses: actions/checkout@v3

      # QEMU enables building/testing for non-native architectures (ie arm64)
      # at the cost of speed
      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true

      - name: does cargo exist?
        run: which cargo && cargo --help && echo $PATH

      - name: Build & test wheels
        uses: pypa/cibuildwheel@v2.12.3
        with:
          package-dir: src/python/dpf-ssw-aligner-rs
        env:
          CIBW_BUILD: '${{ matrix.python-version }}-*'
          # rust doesn't seem to be available for musl linux on i686
          CIBW_SKIP: '*-musllinux_i686'
          # we build for "alt_arch_name" if it exists, else 'auto'
          CIBW_ARCHS: ${{ matrix.alt_arch_name || 'auto' }}
          CIBW_ENVIRONMENT: 'PATH="$HOME/.cargo/bin:$PATH" CARGO_TERM_COLOR="always"'
          CIBW_ENVIRONMENT_WINDOWS: 'PATH="$UserProfile\.cargo\bin;$PATH"'
          CIBW_BEFORE_ALL_WINDOWS: "rustup target add x86_64-pc-windows-msvc i686-pc-windows-msvc"
          CIBW_BEFORE_ALL_MACOS: "rustup target add aarch64-apple-darwin x86_64-apple-darwin"
          CIBW_BEFORE_BUILD: rustup show
          CIBW_BEFORE_BUILD_LINUX: >
            curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain=nightly --profile=minimal -y &&
            rustup show
          # CIBW_TEST_SKIP: '*-macosx_universal2:arm64'
          CIBW_BUILD_VERBOSITY: 1


      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/dpf_ssw_aligner*.whl

